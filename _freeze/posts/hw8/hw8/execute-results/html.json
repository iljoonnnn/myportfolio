{
  "hash": "12f0ef8a64f41e9744b3402f9b8ff60e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS Bigdata School Homework 8\"\nauthor: iljoon\ndate: \"2024-09-23\"\ncategories: [homework]\njupyter: python3\n---\n\n\n# 로지스틱 회귀 예제\n\n::: {#592a166e .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\n\n'''\n종속변수: 백혈병 세포 관측 불가 여부 (REMISS), 1이면 관측 안됨을 의미\n\n독립변수:\n\n골수의 세포성 (CELL)\n골수편의 백혈구 비율 (SMEAR)\n골수의 백혈병 세포 침투 비율 (INFIL)\n골수 백혈병 세포의 라벨링 인덱스 (LI)\n말초혈액의 백혈병 세포 수 (BLAST)\n치료 시작 전 최고 체온 (TEMP)\n'''\n\n# 워킹 디렉토리 설정\nimport os\ncwd=os.getcwd()\nparent_dir = os.path.dirname(cwd)\nmain_dir = os.path.dirname(parent_dir)\nos.chdir(main_dir)\n```\n:::\n\n\n# 문제 1. 데이터를 로드하고, 로지스틱 회귀모델을 적합하고, 회귀 표를 작성하세요.\n\n::: {#cb700ebd .cell execution_count=2}\n``` {.python .cell-code}\n# 데이터 불러오기\ndf = pd.read_csv('./data/leukemia_remission.txt', sep='\\t')\ndf\n\n# 로지스틱 회귀모델 적합.\nmodel = sm.formula.logit(\"REMISS ~ CELL + SMEAR + INFIL + LI + BLAST + TEMP\", data=df).fit()\n\n# 회귀 표 출력\nprint(model.summary())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimization terminated successfully.\n         Current function value: 0.399886\n         Iterations 10\n                           Logit Regression Results                           \n==============================================================================\nDep. Variable:                 REMISS   No. Observations:                   27\nModel:                          Logit   Df Residuals:                       20\nMethod:                           MLE   Df Model:                            6\nDate:                Mon, 23 Sep 2024   Pseudo R-squ.:                  0.3718\nTime:                        21:11:22   Log-Likelihood:                -10.797\nconverged:                       True   LL-Null:                       -17.186\nCovariance Type:            nonrobust   LLR p-value:                   0.04670\n==============================================================================\n                 coef    std err          z      P>|z|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept     64.2581     74.965      0.857      0.391     -82.670     211.187\nCELL          30.8301     52.135      0.591      0.554     -71.353     133.013\nSMEAR         24.6863     61.526      0.401      0.688     -95.903     145.275\nINFIL        -24.9745     65.281     -0.383      0.702    -152.923     102.974\nLI             4.3605      2.658      1.641      0.101      -0.849       9.570\nBLAST         -0.0115      2.266     -0.005      0.996      -4.453       4.430\nTEMP        -100.1734     77.753     -1.288      0.198    -252.567      52.220\n==============================================================================\n\nPossibly complete quasi-separation: A fraction 0.11 of observations can be\nperfectly predicted. This might indicate that there is complete\nquasi-separation. In this case some parameters will not be identified.\n```\n:::\n:::\n\n\n# 문제 2. 해당 모델은 통계적으로 유의한가요? 그 이유를 검정통계량를 사용해서 설명하시오.\n\n::: {#c25b86e7 .cell execution_count=3}\n``` {.python .cell-code}\n'''\n유의수준 5%일 때 유의하다.\nLLR p-value: 0.04670 이기 때문에.\n'''\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n'\\n유의수준 5%일 때 유의하다.\\nLLR p-value: 0.04670 이기 때문에.\\n'\n```\n:::\n:::\n\n\n# 문제 3. 유의수준이 0.2를 기준으로 통계적으로 유의한 변수는 몇개이며, 어느 변수 인가요?\n\n::: {#d052a891 .cell execution_count=4}\n``` {.python .cell-code}\n'''\n유의수준 0.2 일 때 유의한 변수는 LI, TEMP\n'''\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n'\\n유의수준 0.2 일 때 유의한 변수는 LI, TEMP\\n'\n```\n:::\n:::\n\n\n# 문제 4. 다음 환자에 대한 오즈는 얼마인가요?\n\n::: {#4f13f1e1 .cell execution_count=5}\n``` {.python .cell-code}\n# CELL (골수의 세포성): 65%\n# SMEAR (골수편의 백혈구 비율): 45%\n# INFIL (골수의 백혈병 세포 침투 비율): 55%\n# LI (골수 백혈병 세포의 라벨링 인덱스): 1.2\n# BLAST (말초혈액의 백혈병 세포 수): 1.1세포/μL\n# TEMP (치료 시작 전 최고 체온): 0.9\n\n## 로그 오즈 식\nlog_odds = 64.2581 + 30.8301 * 0.65 + 24.6863 * 0.45 -24.9745 * 0.55 + 4.3605 * 1.2 -0.0115 * 1.1 -100.1734 * 0.9\nlog_odds # -3.2655849999999873\n\n## 오즈 식\nmy_odds = np.exp(log_odds)\nmy_odds # 0.03817459641135519\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nnp.float64(0.03817459641135519)\n```\n:::\n:::\n\n\n# 문제 5. 위 환자의 혈액에서 백혈병 세포가 관측되지 않은 확률은 얼마인가요?\n\n::: {#ea85aefc .cell execution_count=6}\n``` {.python .cell-code}\nmy_odds / (my_odds+1)\n# 0.03677088280074742\n# 3.6%\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\nnp.float64(0.03677088280074742)\n```\n:::\n:::\n\n\n# 문제 6. TEMP 변수의 계수는 얼마이며, 해당 계수를 사용해서 TEMP 변수가 백혈병 치료에 대한 영향을 설명하시오.\n\n::: {#0bfa0066 .cell execution_count=7}\n``` {.python .cell-code}\n'''\nTEMP가 0.01 오르면 로그 오즈가 -1.001734 만큼 증가한다.(사실 떨어지는거.)\n이는 TEMP가 0.01 증가할 때마다 \"백혈병 세포가 관측 되지 않는 것\" 대한 오즈가 약 63.27% 떨어진다는 것이다.\n'''\nnp.exp(-1.001734) # 0.3672420909627784\n(0.3672420909627784 - 1) * 100\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n-63.27579090372216\n```\n:::\n:::\n\n\n# 문제 7. CELL 변수의 99% 오즈비에 대한 신뢰구간을 구하시오.\n\n::: {#0670d152 .cell execution_count=8}\n``` {.python .cell-code}\n# 모르겠다!!\n```\n:::\n\n\n# 문제 8. 주어진 데이터에 대하여 로지스틱 회귀 모델의 예측 확률을 구한 후, 50% 이상인 경우 1로 처리하여, 혼동 행렬를 구하시오.\n\n::: {#42abc45f .cell execution_count=9}\n``` {.python .cell-code}\ndf = df.assign(odds = \n    np.exp(\n      64.2581 + 30.8301 * df['CELL'] + 24.6863 * df['SMEAR'] +\n      (-24.9745) * df['INFIL'] + 4.3605 * df['LI'] +\n      (-0.0115) * df['BLAST'] + (-100.1734) * df['TEMP']\n    ))\ndf = df.assign(remiss_probability =\n    df['odds'] / (df['odds'] + 1))\ndf = df.assign(classification =\n    np.where(df['remiss_probability'] >= 0.5,\n             1, 0))\n```\n:::\n\n\n# 문제 9. 해당 모델의 Accuracy는 얼마인가요?\n\n::: {#33435c8d .cell execution_count=10}\n``` {.python .cell-code}\nmymatrix = np.matrix([[\n    ((df['classification'] == 1) & (df['REMISS'] == 1)).sum(),\n    ((df['classification'] == 1) & (df['REMISS'] == 0)).sum()\n    ],\n    [\n    ((df['classification'] == 0) & (df['REMISS'] == 1)).sum(),\n    ((df['classification'] == 0) & (df['REMISS'] == 0)).sum()\n    ]])\n\n# 올바르게 예측한 샘플 개수\nmymatrix[0, 0] + mymatrix[1, 1] # 20\n\n# 전체 샘플 개수\nmymatrix[0, 0] + mymatrix[0, 1] + mymatrix[1, 0] + mymatrix[1, 1] # 27\n\n20/27 # Accuracy = 0.74\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n0.7407407407407407\n```\n:::\n:::\n\n\n# 문제 10. 해당 모델의 F1 Score를 구하세요.\n\n::: {#d042c2b8 .cell execution_count=11}\n``` {.python .cell-code}\nprecision = mymatrix[0, 0] / (mymatrix[0, 0] + mymatrix[0, 1]) # 0.625\nrecall = mymatrix[0, 0] / (mymatrix[0, 0] + mymatrix[1, 0]) # 0.555\n\n2 * (precision * recall) / (precision + recall) # 0.588\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\nnp.float64(0.5882352941176471)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "hw8_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}